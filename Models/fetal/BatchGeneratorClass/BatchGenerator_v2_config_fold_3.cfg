

FLAGverbose = 0 			# [optional / 0] Verbosity flag.
numEpochs = 1500 			# Number of epochs
batchSizeTraining = 2	# [optional / 1] Number of images per batch during training. The batch size is automatically set to 1 during validation.
numThreads = 4				# [optional / 1] Number of threads used to generate the batches.

FLAGresizeImages = 1 		# Flag to resize (1) or not (0) the input images and gt.
imageSize = (96,96,96) 		# new images size
gtSize = (96,96,96) 		# new gt size

FLAGresizeImages_2D = 1
imageSize_2D = (96,96)


# Num. cases loaded per epoch when using the whole volume. If <= 0, load all the training cases.
numOfCasesLoadedPerEpochWhenTrainingWholeVolume = 0


# Intensity normalization mode:
# [optional]
# - 'range': all the images are normalized to the range [intNormParam1 intNormParam2]
# - 'meanStd': all the images are normalized to mean = intNormParam1 and std = intNormParam2.
# If available, the image masks will be used to normalize the image.

FLAGintensityNormalization = 1 				# [optional / 0] 		Flag to normalize (1) or not (0) the intensity of images.
intensityNormalizationMode = ['range']		# [optional / 'none']	Normalization type
intNormParam1 = [0]							# [optional / 0] 		Normalization parameter 1  (e.g., lower bound)
intNormParam2 = [1]							# [optional / 0] 		Normalization parameter 2  (e.g., upper bound)
isChannelBinary = [1] 						# List of flags to indicate if a channel is binary (1) or not (0)
FLAGsetBkgrnd = True 						# [optional / False] 	Flag to set the intensity value of the background voxels (the background voxels are defined by those voxels in the Mask volume with value 0)
bkgrndLabel = 0 	 						# [optional / 0] 		New background value. The background voxels will be set to this value.


# 2D Intensity normalization mode: (preprocessing options for the additinal 2D planes):
# These elements are list, one per additional 2D plane.
FLAGintensityNormalization_2D = 1 				# [optional / 0] 		Flag to normalize (1) or not (0) the intensity of images.
intensityNormalizationMode_2D = ['range','range','range']		# [optional / 'none']	Normalization type
intNormParam1_2D = [0,0,0]							# [optional / 0] 		Normalization parameter 1  (e.g., lower bound)
intNormParam2_2D = [1,1,1]							# [optional / 0] 		Normalization parameter 2  (e.g., upper bound)
isChannelBinary_2D = [0,0,0] 						# List of flags to indicate if a channel is binary (1) or not (0)


#  ======  Data augmentation =======
# [optional] (disabled by default)
# Parameters and options to perform data augmentation when generating training batches.
dataAugmentationRate = 1.0 			# [optional / 0.0] Rate of samples created via data augmentation.
translationRangeX = [-1, 1] 		# Range for translation in dim 1 (in voxels)
translationRangeY = [-1, 1]			# Range for translation in dim 2 (in voxels)
translationRangeZ = [-1, 1]			# Range for translation in dim 3 (in voxels)
isotropicScaleFLAG = 0				# [optional / 1] Flag to indicate if the scaling is isotropic (1) or anisotropic (0)
isotropicScaleRange = [0.8, 1.2] 	# Range for the isotropic scaling factor; it will only be used if isotropicScaleFLAG == 1
anisoScaleRangeX = [0.8, 1.2] 		# Range for the anisotropic scaling factor in dim 1; it will only be used if isotropicScaleFLAG == 0
anisoScaleRangeY = [0.8, 1.2]		# Range for the anisotropic scaling factor in dim 2; it will only be used if isotropicScaleFLAG == 0
anisoScaleRangeZ = [0.8, 1.2]		# Range for the anisotropic scaling factor in dim 3; it will only be used if isotropicScaleFLAG == 0
rotationRangeX = [-1, 1]			# Range for the rotation in dim 1 (in degrees)
rotationRangeY = [-1, 1]			# Range for the rotation in dim 2 (in degrees)
rotationRangeZ = [-1, 1]			# Range for the rotation in dim 3 (in degrees)
FLAGholesNoise = 0					# [optional / 0] Flag to use hole-based noise (i.e., adding spheric elements with the background value)
holesRatio = [0, 0]			   		# Range for holes (min - max number of holes)
holesRadiiRange = [0, 0]			# Range for the radii of holes (min - max radii)
FLAGsaltpepperNoise = 0				# [optional / 0] Flag to use salt&pepper noise
ratioSaltPepperNoise = [0, 0] 		# Range for salt-pepper noise (min - max number of elements)
saltPepperNoiseSizeRange = [0, 0] 	# Size range for the salt&pepper noise


#  ======  Data augmentation 2D planes =======
dataAugmentationRate_2D = 1.0
translationRangeX_2D = [-1, 1] 			# Range for translation in dim 1 (in voxels)
translationRangeY_2D = [-1, 1]			# Range for translation in dim 2 (in voxels)
isotropicScaleFLAG_2D = 0				# [optional / 1] Flag to indicate if the scaling is isotropic (1) or anisotropic (0)
isotropicScaleRange_2D = [0.8, 1.2] 	# Range for the isotropic scaling factor; it will only be used if isotropicScaleFLAG == 1
anisoScaleRangeX_2D = [1., 1.] 		# Range for the anisotropic scaling factor in dim 1; it will only be used if isotropicScaleFLAG == 0
anisoScaleRangeY_2D = [1., 1.]		# Range for the anisotropic scaling factor in dim 2; it will only be used if isotropicScaleFLAG == 0
rotationRange_2D = [-1, 1]			    # Range for the rotation in dim 1 (in degrees)



# ====== Input files' paths =======
# .... Training  ....
# [Required] A list that should contain as many entries as the channels of the input image (eg multi-modal MRI).
# The entries should be paths to files. Those files should be listing the paths to the corresponding channels for
# each training-case. (see example files).
# e.g. channelsTraining = ["F:\Projects\conf_files\Fetal_Skull_Segmentation\training_US_channel.cfg", "F:\Projects\conf_files\Fetal_Skull_Segmentation\training_wavefrontX_channel.cfg", "F:\Projects\conf_files\Fetal_Skull_Segmentation\training_wavefrontY_channel.cfg", "F:\Projects\conf_files\Fetal_Skull_Segmentation\training_wavefrontZ_channel.cfg"]
channelsTraining = ["/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train.cfg"]
channelsTraining_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_ID.cfg"
channelsTraining2D_cor = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_cor.cfg"
channelsTraining2D_cor_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_cor_ID.cfg"
channelsTraining2D_sag = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_sag.cfg"
channelsTraining2D_sag_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_sag_ID.cfg"
channelsTraining2D_trvent = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_trvent.cfg"
channelsTraining2D_trvent_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_trvent_ID.cfg"

#channelsTraining = ["/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val.cfg"]
#channelsTraining_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_ID.cfg"
#channelsTraining2D_cor = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_cor.cfg"
#channelsTraining2D_cor_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_cor_ID.cfg"
#channelsTraining2D_sag = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_sag.cfg"
#channelsTraining2D_sag_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_sag_ID.cfg"
#channelsTraining2D_trvent = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_trvent.cfg"
#channelsTraining2D_trvent_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_trvent_ID.cfg"

# [Required] The path to a file which should list paths to the Ground Truth labels of each training case.
gtLabelsTraining = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train.cfg"
gtLabelsTraining_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_train_ID.cfg"
#gtLabelsTraining = "/homes/wt814/IndividualProject/code/config/Train_3/fold_3_val.cfg"
#gtLabelsTraining_ID = "/homes/wt814/IndividualProject/code/config/Train_3/fold_3_val_ID.cfg"

# [Optional] The path to a file, which should list paths to the Region-Of-Interest masks for each training case.
# If ROI masks are provided, the training samples will be extracted only within it. Otherwise from whole volume.
# This mask is also used for calculating mu and std intensities for intensity-augmentation, if performed.
# roiMasksTraining = [""]

# .... Validation  ....
channelsValidation = ["/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val.cfg"]
channelsValidation_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_ID.cfg"
channelsValidation2D_cor = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_cor.cfg"
channelsValidation2D_cor_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_cor_ID.cfg"
channelsValidation2D_sag = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_sag.cfg"
channelsValidation2D_sag_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_sag_ID.cfg"
channelsValidation2D_trvent = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_trvent.cfg"
channelsValidation2D_trvent_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_trvent_ID.cfg"

gtLabelsValidation = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val.cfg"
gtLabelsValidation_ID = "/homes/wt814/IndividualProject/code/BatchGeneratorClass/config/Train_3/fold_3_val_ID.cfg"

# roiMasksValidation = [""]
